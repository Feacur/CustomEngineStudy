@echo off

set target_name=elementary
set build_folder="build"
if not exist %build_folder% mkdir %build_folder%

pushd %build_folder%

rem -ggdb: Produce debugging information for use by GDB

rem -O0: Disable (Debug)
rem -O1: Optimize
rem -O2: Optimize even more
rem -O3: Optimize yet more for speed
rem -Os: Optimize yet more for size
rem -Og: Optimize with respect to debugging experience
rem -ffast-math: Sets the options -fno-math-errno, -funsafe-math-optimizations, -ffinite-math-only, -fno-rounding-math, -fno-signaling-nans and -fcx-limited-range

rem -Wpedantic: Issue all the warnings demanded by strict ISO C and ISO C++
rem -Wall: This enables all the warnings about constructions that some users consider questionable
rem -Wextra: This enables some extra warning flags that are not enabled by -Wall
rem -Werror: Make all warnings into errors
rem -Wno-abc: Ignore warning "abc"

rem -std=abc: Determine the language standard "abc"
rem -mwindows: It specifies that a GUI application is to be generated by instructing the linker to set the PE header subsystem type appropriately

rem -shared: Produce a shared object which can then be linked with other objects to form an executable
rem -l abc: Search the library named "abc" when linking
rem -o abc: Place output in file "abc"

set DebugFlags=-ggdb
set OptimizeFlags=-O3 -ffast-math -msse2
set Warnings=-Wall -Wextra -Werror -Wno-unused-variable -Wno-unused-parameter -Wno-missing-field-initializers -Wno-psabi
set CompilerFlags=-std=c++14 %DebugFlags% %OptimizeFlags% %Warnings%
set DllCompilerFlags=%CompilerFlags%
set ExeCompilerFlags=%CompilerFlags% -mwindows

set DllLinkerFlags=-shared
set ExeLinkerFlags=-l user32 -l gdi32

if exist *.pdb del /q *.pdb

gcc -o %target_name%_build.dll "..\code\game.cpp" %DllCompilerFlags% %DllLinkerFlags%
gcc -o %target_name%.exe "..\code\win32.cpp" %ExeCompilerFlags% %ExeLinkerFlags%

popd
