@echo off

set target_name=elementary

set build_folder=build
if not exist %build_folder% mkdir %build_folder%
pushd %build_folder%

set intermediate_folder=intermediate
if not exist %intermediate_folder% mkdir %intermediate_folder%

rem -ggdb: Produce debugging information for use by GDB

rem -O0: Disable (Debug)
rem -O1: Optimize
rem -O2: Optimize even more
rem -O3: Optimize yet more for speed
rem -Os: Optimize yet more for size
rem -Og: Optimize with respect to debugging experience
rem -ffast-math: Sets the options -fno-math-errno, -funsafe-math-optimizations, -ffinite-math-only, -fno-rounding-math, -fno-signaling-nans and -fcx-limited-range

rem -Wpedantic: Issue all the warnings demanded by strict ISO C and ISO C++
rem -Wall: This enables all the warnings about constructions that some users consider questionable
rem -Wextra: This enables some extra warning flags that are not enabled by -Wall
rem -Werror: Make all warnings into errors
rem -Wno-abc: Ignore warning "abc"

rem -std=abc: Determine the language standard "abc"
rem -mconsole: This option specifies that a console application is to be generated, by instructing the linker to set the PE header subsystem type required for console applications. This option is available for Cygwin and MinGW targets and is enabled by default on those targets.
rem -mwindows: It specifies that a GUI application is to be generated by instructing the linker to set the PE header subsystem type appropriately

rem -shared: Produce a shared object which can then be linked with other objects to form an executable
rem -l abc: Search the library named "abc" when linking
rem -o abc: Place output in file "abc"

rem -Wl,option: Pass option as an option to the linker

set DllName=%target_name%
set DllIntermediate=%intermediate_folder%\%DllName%_dll

set ExeName=%target_name%
set ExeIntermediate=%intermediate_folder%\%ExeName%_exe

set DebugFlags=-ggdb
set OptimizeFlags=-O3 -ffast-math -msse2
set WarningFlags=-Wall -Wextra -Werror -Wno-unused-variable -Wno-unused-parameter -Wno-missing-field-initializers -Wno-psabi
set AdditionalFlags=-I..\code
set CompilerFlags=-std=c++14 %AdditionalFlags% %DebugFlags% %OptimizeFlags% %WarningFlags%
set DllCompilerFlags=%CompilerFlags%
set ExeCompilerFlags=%CompilerFlags% 

set ExeLibraries=-l user32 -l gdi32
rem set ExeLibraries=-Wl,--library=user32,--library=gdi32
set DllLinkerIntermediate=-Wl,--Map=%DllIntermediate%.map
set DllLinkerFlags=-shared        %DllLinkerIntermediate%
set ExeLinkerIntermediate=-Wl,--Map=%ExeIntermediate%.map
set ExeLinkerFlags=%ExeLibraries% %ExeLinkerIntermediate%

rem console, use "int main(...) { }
set ExeCompilerFlags=%ExeCompilerFlags% -mconsole

rem 32-bit, 64-bit, use "int CALLBACK WinMain(...) { }
rem set ExeCompilerFlags=%ExeCompilerFlags% -mwindows

rem console, use "int main(...) { }
rem set ExeLinkerFlags=%ExeLinkerFlags% -Wl,--subsystem,console

rem 32-bit, use "int CALLBACK WinMain(...) { }
rem set ExeLinkerFlags=%ExeLinkerFlags% -Wl,--subsystem,windows:5.01

rem 64-bit, use "int CALLBACK WinMain(...) { }
rem set ExeLinkerFlags=%ExeLinkerFlags% --subsystem windows:5.02

if exist *.pdb del /q *.pdb

echo    - time: %time%
gcc "..\code\game.cpp"  -o %target_name%.dll %DllCompilerFlags% %DllLinkerFlags%
echo    - time: %time%
gcc "..\code\win32.cpp" -o %target_name%.exe %ExeCompilerFlags% %ExeLinkerFlags%
echo    - time: %time%

popd
